import telebot
from telebot import types
import sqlite3
import datetime
import re
from telebot.types import ReplyKeyboardRemove
import os
import shutil
from dotenv import load_dotenv
import time
import keyboards
import admin

# 5767703975 - —Ñ–∏–ª–∏–ø—Å
# 1716228512 - –∂–¥–∞–Ω–∏–∫
# 5160115482 - –ê–Ω–¥—Ä–µ–π
# 419202649 - –Æ—Ä–∞

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv("BOT_TOKEN")
if not API_TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env.")

bot = telebot.TeleBot(API_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
advert_data = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
tel_data = {}


@bot.message_handler(commands=['üêª'])
def mishka(message):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª .gif.mp4 –≤ —Ä–µ–∂–∏–º–µ —á—Ç–µ–Ω–∏—è
    with open("mishka.gif.mp4", "rb") as animation:
        bot.send_animation(chat_id=message.chat.id, animation=animation)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ID –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=['ban'])
def ban_user(message):
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID = 123456789, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID)
    if message.from_user.id != 1485419781:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        user_id_to_ban = int(message.text.split()[1])
        banned_users = admin.load_banned_users()

        if user_id_to_ban in banned_users['banned']:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_ban} —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
        else:
            banned_users['banned'].append(user_id_to_ban)
            admin.save_banned_users(banned_users)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_ban} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except IndexError:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except ValueError:
        bot.reply_to(message, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ID –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö
@bot.message_handler(commands=['unban'])
def unban_user(message):
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, ID = 123456789, –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π ID)
    if message.from_user.id != 1485419781:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        user_id_to_unban = int(message.text.split()[1])
        banned_users = admin.load_banned_users()

        if user_id_to_unban not in banned_users['banned']:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_unban} –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
        else:
            banned_users['banned'].remove(user_id_to_unban)
            admin.save_banned_users(banned_users)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id_to_unban} –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except IndexError:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    except ValueError:
        bot.reply_to(message, "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")


# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def check_banned(func):
    def wrapper(message, *args, **kwargs):
        user_id = message.from_user.id
        banned_users = admin.load_banned_users()
        if user_id in banned_users['banned']:
            bot.reply_to(message, "–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã. –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        return func(message, *args, **kwargs)  # –ï—Å–ª–∏ –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –≤—ã–ø–æ–ª–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é

    return wrapper


@bot.message_handler(commands=['start'])
@check_banned
def start_message(message):
    full_datetime = datetime.datetime.now().replace(microsecond=0)
    print(f'User {message.from_user.id} launch bot at {full_datetime}')

    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º!'
                     ' –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã –∏–ª–∏ —É—Å–ª—É–≥–∏. üì¶üí∞'
                     '\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.üòä'
                     '\n\n–£–¥–∞—á–∏ –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö! üéâ', reply_markup=keyboards.help_kb())

    bot.send_message(message.chat.id, '–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä, –≤—ã–±—Ä–∞–≤ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:',
                     reply_markup=keyboards.main_menu_kb())


@bot.message_handler(commands=['help'])
@check_banned
def send_help(message):
    bot.send_message(message.chat.id,
                     '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:'
                     '\n1) /help - üÜò —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'
                     '\n2) /restart - üîÑ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç –±–æ—Ç–∞ (–≤—ã–∑–æ–≤–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)'
                     '\n3) /ban - üîê –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)'
                     '\n4) /unban - üîì —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)'
                     f'\n–ï—Å–ª–∏ –ø–æ—è–≤–∏–ª–∏—Å—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–≤—Ç–æ—Ä–æ–º: @ADR3NAL1N41K',
                     parse_mode='HTML')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
@bot.callback_query_handler(func=lambda call: call.data == "help")
@check_banned
def callback_help(call):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /help –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.answer_callback_query(call.id)  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∫–ª–∏–∫
    send_help(call.message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é send_help


@bot.message_handler(commands=['restart'])
@check_banned
def start_menu(message):
    bot.send_message(message.chat.id, '–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä, –≤—ã–±—Ä–∞–≤ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:',
                     reply_markup=keyboards.main_menu_kb())


@bot.message_handler(func=lambda message: message.text == 'üñäÔ∏è –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
@check_banned
def start_creating_advert(message):
    bot.send_message(message.chat.id,
                     '<b>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω—É–∂–Ω–æ –∏–º–µ—Ç—å username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.</b>'
                     '\n–ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.', parse_mode='HTML')
    create_advert(message)


@bot.message_handler(func=lambda message: message.text == 'üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
@check_banned
def start_watching_adverts(message):
    watch_advert(message)


@bot.message_handler(func=lambda message: message.text == 'üìÇ –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
@check_banned
def start_watching_my_ads(message):
    watch_my_ads(message)


def create_advert(message):
    if message.from_user.username is None:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±–µ–∏–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
        bot.send_message(
            message.chat.id,
            '–î–æ–±–∞–≤—å—Ç–µ username, –ø–µ—Ä–µ–π–¥—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:',
            reply_markup=keyboards.create_username_kb()
        )
        bot.send_message(
            message.chat.id,
            '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
            reply_markup=keyboards.get_telnum_kb()
        )
    else:
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
                         reply_markup=keyboards.select_category_for_create_advert_kb())


@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        phone_number = message.contact.phone_number
        bot.send_message(message.chat.id, f"–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.")
        tel_data[message.chat.id] = {'telnum': phone_number}
        print(advert_data)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
                     reply_markup=keyboards.select_category_for_create_advert_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
@bot.callback_query_handler(func=lambda callback: callback.data in ['housing_create', 'product_create', 'service_create'])
@check_banned
def category_selected(callback):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    advert_data[callback.message.chat.id] = {'category': callback.data.split('_')[0]}
    bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:')
    bot.register_next_step_handler(callback.message, get_title)


def get_title(message):
    if len(message.text) > 32:
        bot.send_message(message.chat.id,
                         '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 32 —Å–∏–º–≤–æ–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–Ω–æ–≤–∞:')
        bot.register_next_step_handler(message, get_title)
        return

    count_of_underlines = 0
    for i in message.text:
        if i == '_':
            count_of_underlines = count_of_underlines + 1

    if count_of_underlines > 0:
        bot.send_message(message.chat.id,
                         "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª '_'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–Ω–æ–≤–∞:")
        bot.register_next_step_handler(message, get_title)
        return

    if message.text == 'üñäÔ∏è –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ' or message.text == 'üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è' or message.text == 'üìÇ –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è':
        bot.send_message(message.chat.id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")
        bot.register_next_step_handler(message, get_title)
        return

    regular_for_title = r'^[A-Za-z–ê-–Ø–∞-—è0-9 ]+$'
    if not re.match(regular_for_title, message.text):
        bot.send_message(message.chat.id,
                         "–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:")
        bot.register_next_step_handler(message, get_title)
        return

    advert_data[message.chat.id]['title'] = message.text
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:')
    bot.register_next_step_handler(message, get_description)


def get_description(message):
    if message.text == 'üñäÔ∏è –ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ' or message.text == 'üëÄ –°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏—è' or message.text == 'üìÇ –ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è':
        bot.send_message(message.chat.id,
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
        bot.register_next_step_handler(message, get_description)
        return

    advert_data[message.chat.id]['description'] = message.text

    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è (BYN):\n"
                                      "–í–≤–æ–¥–∏—Ç–µ —Ü–µ–Ω—É –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100, 100.99"
                                      ", '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è',  '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'.", reply_markup=keyboards.price_kb())

    bot.register_next_step_handler(message, get_price)


def get_price(message):
    price = ''
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Ü–µ–Ω—ã (–¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
    price_text = message.text
    price_pattern = r'^\d+(\.\d{1,2})?$'  # –¶–µ–Ω–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Ü–µ–ª–æ–π —á–∞—Å—Ç–∏ –∏ –¥–æ 2 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é
    if not re.match(price_pattern, price_text) and not price_text == '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è' and not price_text == '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ':
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100 –∏–ª–∏ 100.99 "
                                          "–∏–ª–∏ '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è' –∏–ª–∏ '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ'.")
        bot.register_next_step_handler(message, get_price)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ü–µ–Ω—É —Å–Ω–æ–≤–∞
        return

    if price_text == '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è':
        price = price_text
    elif price_text == '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ':
        price = price_text
    elif float(price_text) <= 0:
        bot.send_message(message.chat.id, "–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É.")
        bot.register_next_step_handler(message, get_price)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ü–µ–Ω—É —Å–Ω–æ–≤–∞
        return
    elif float(price_text) > 0:
        price = price_text

    #–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    advert_data[message.chat.id]['price'] = price
    print(advert_data)
    bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å).\n–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏!\n"
                                      "–ö –æ–±—ä—è–≤–ª–µ–Ω–∏—é –º–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –¥–æ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π!"
                                      "\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –≤–≤–µ–¥–∏—Ç–µ /done",
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, get_user_pics)


photo_ids = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è file_id –≤—Å–µ—Ö –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π


@bot.message_handler(content_types=['photo'])
@check_banned
def get_user_pics(message):
    # –ü—É—Ç—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    user_id = message.from_user.id
    title = advert_data[message.chat.id]["title"]
    folder_name = f"{user_id}_{title}"
    folder_path = os.path.join('adv_photos_folder', folder_name)

    print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ file_ids: ', len(photo_ids))

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    if not os.path.exists(folder_path):
        os.makedirs(folder_path)

    if message.text == '/done':
        get_photo(message, photo_ids)
        return

    elif len(photo_ids) >= 10:
        bot.send_message(message.chat.id, '–ù–µ–ª—å–∑—è –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –±–æ–ª—å—à–µ 10 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π')
        get_photo(message, photo_ids)
        return

    elif message.photo:
        if message.photo[-1].file_id not in photo_ids:
            # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º—É—é –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é (–æ–±—ã—á–Ω–æ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤ —Å–ø–∏—Å–∫–µ)
            photo = message.photo[-1]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç
            file_id = photo.file_id
            print(file_id)
            file_path = bot.get_file(file_id).file_path
            print(bot.get_file(file_id))
            print('file_path: ', file_path)
            file_name = file_path.split('/')[-1]
            print('file_name: ', file_name)
            downloaded_file = bot.download_file(file_path)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É
            with open(os.path.join(folder_path, file_name), 'wb') as f:
                f.write(downloaded_file)

            photo_ids.append(file_id)  # –î–æ–±–∞–≤–ª—è–µ–º file_id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Å–ø–∏—Å–æ–∫

    elif message.document:
        bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ñ–æ—Ç–æ –≤ —Å–∂–∞—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!')
        return

    send = bot.send_message(message.from_user.id, "–î–æ–±–∞–≤—å—Ç–µ –µ—â—ë —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ\n /done")
    bot.register_next_step_handler(send, get_user_pics)
    return


def get_photo(message, photo_ids):
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    # –î–û–ó–ê–ü–ò–°–´–í–ê–ï–ú –î–ê–ù–ù–´–ï –û –î–ê–¢–ï –°–û–ó–î–ê–ù–ò–Ø –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –ò USER_id –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
    full_datetime = datetime.datetime.now()
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å—Ç—Ä–æ–∫—É —Å –Ω—É–∂–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º
    current_datetime = full_datetime.strftime("%Y-%m-%d %H:%M:%S")
    advert_data[message.chat.id]['date'] = current_datetime

    if not photo_ids:
        advert_data[message.chat.id]['photo'] = None
        bot.send_message(message.chat.id, '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã. –û–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –±–µ–∑ —Ñ–æ—Ç–æ.')
    else:
        advert_data[message.chat.id]['photo'] = photo_ids  # –°–æ—Ö—Ä–∞–Ω—è–µ–º list file_id
        bot.send_message(message.chat.id, '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏!')

    if message.from_user.username is None:
        advert_data[message.chat.id]['telnum'] = tel_data[message.chat.id]['telnum']
    else:
        advert_data[message.chat.id]['telnum'] = None

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    advert = advert_data[message.chat.id]
    print(advert)

    if message.from_user.username is None:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
        cursor.execute("""
                INSERT INTO AdvertTable(UserID, ChatID, Authors_username, Category, Title, Description, Price, Photos, 
                Date, TelNumber)
                VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
            message.from_user.id,
            message.chat.id,
            None,
            advert["category"],
            advert["title"],
            advert["description"],
            advert["price"],
            ','.join(advert['photo']) if advert['photo'] else None,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_ids –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            current_datetime,
            advert["telnum"]
        ))

    else:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
        cursor.execute("""
                INSERT INTO AdvertTable(UserID, ChatID, Authors_username, Category, Title, Description, Price, Photos, 
                Date, TelNumber)
                VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
                """, (
            message.from_user.id,
            message.chat.id,
            message.from_user.username,
            advert["category"],
            advert["title"],
            advert["description"],
            advert["price"],
            ','.join(advert['photo']) if advert['photo'] else None,  # –°–æ—Ö—Ä–∞–Ω—è–µ–º file_ids –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
            current_datetime,
            None
        ))

    connect.commit()
    connect.close()
    printed_category = 'undef'

    if advert["category"] == 'housing':
        printed_category = '–ñ–∏–ª—å—ë'
    elif advert["category"] == 'product':
        printed_category = '–¢–æ–≤–∞—Ä'
    elif advert["category"] == 'service':
        printed_category = '–£—Å–ª—É–≥–∞'

    if advert["price"] == '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' or advert["price"] == '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(message.chat.id, f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n'
                                          f'<b>–ù–∞–∑–≤–∞–Ω–∏–µ: {advert["title"]}</b>\n'
                                          f'–û–ø–∏—Å–∞–Ω–∏–µ: {advert["description"]}\n'
                                          f'–¶–µ–Ω–∞: {advert["price"]}\n'
                                          f'–§–æ—Ç–æ: {"–ï—Å—Ç—å" if advert["photo"] else "–ù–µ—Ç"}\n'
                                          f'–ê–≤—Ç–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è: @{message.from_user.username if message.from_user.username != None else advert["telnum"]}\n'
                                          f'–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {advert["date"]}', parse_mode='HTML',
                         reply_markup=keyboards.main_menu_kb())
    else:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(message.chat.id, f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n'  # f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {advert["category"]}\n'
                                          f'<b>–ù–∞–∑–≤–∞–Ω–∏–µ: {advert["title"]}</b>\n'
                                          f'–û–ø–∏—Å–∞–Ω–∏–µ: {advert["description"]}\n'
                                          f'–¶–µ–Ω–∞: {advert["price"]} BYN\n'
                                          f'–§–æ—Ç–æ: {"–ï—Å—Ç—å" if advert["photo"] else "–ù–µ—Ç"}\n'
                                          f'–ê–≤—Ç–æ—Ä –æ–±—ä—è–≤–ª–µ–Ω–∏—è: @{message.from_user.username if message.from_user.username != None else advert["telnum"]}\n'
                                          f'–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: {advert["date"]}', parse_mode='HTML',
                         reply_markup=keyboards.main_menu_kb())

    # –û—á–∏—Å—Ç–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    del advert_data[message.chat.id]


###################################################################       –ü–†–û–°–ú–û–¢–† –û–ë–™–Ø–í–õ–ï–ù–ò–ô

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è (–ø–∞–º—è—Ç—å –Ω–∞ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏)
user_state = {}
category = ''


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
def watch_advert(message):
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞:',
                     reply_markup=keyboards.select_category_for_watch_advert_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
@bot.callback_query_handler(func=lambda callback: callback.data in ['housing_watch', 'product_watch', 'service_watch'])
@check_banned
def watch_category_handler(callback):
    # –ü–æ–ª—É—á–∞–µ–º callback_data –∏–∑ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    category = 'undef'
    name_of_category = 'undef'
    if callback.data == 'housing_watch':
        category = 'housing'
        name_of_category = '–ñ–∏–ª—å—ë'
    elif callback.data == 'product_watch':
        category = 'product'
        name_of_category = '–¢–æ–≤–∞—Ä'
    elif callback.data == 'service_watch':
        category = 'service'
        name_of_category = '–£—Å–ª—É–≥–∞'
    else:
        bot.send_message(callback.message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞!")
        start_menu(callback.message)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state[callback.message.chat.id] = {'category': category, 'page': 0}

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    cursor.execute("SELECT Title FROM AdvertTable WHERE Category = ?", (category,))
    titles_exec = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å—Ç–æ–ª–±—Ü–∞ Title
    titles = [title[0] for title in titles_exec]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —é–∑–µ—Ä–∞ –Ω–∞ –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if not titles:
        bot.send_message(callback.message.chat.id, f'–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {name_of_category} –ø–æ–∫–∞ —á—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è.'
                                                   f'\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é.')
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = keyboards.create_inline_keyboard(titles, category, 0)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(callback.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=keyboard)
    connect.close()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
@bot.callback_query_handler(func=lambda callback: callback.data.startswith('page_'))
@check_banned
def pagination_handler(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ callback_data
    data = callback.data.split('_')
    category = data[1]
    page = int(data[2])

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    user_state[callback.message.chat.id] = {'category': category, 'page': page}

    print('user_state –¥–ª—è pagination_handler:\n', user_state)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    cursor.execute("SELECT Title FROM AdvertTable WHERE Category = ?", (category,))
    titles_exec = cursor.fetchall()
    titles = [title[0] for title in titles_exec]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    keyboard = keyboards.create_inline_keyboard(titles, category, page)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞:", chat_id=callback.message.chat.id,
                          message_id=callback.message.message_id, reply_markup=keyboard)

    connect.close()


@bot.callback_query_handler(func=lambda callback: callback.data.count('_') == 1)
@check_banned
def show_advert_detail(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ callback_data
    category, title = callback.data.split('_', 1)
    printed_category = 'undef'

    if category == 'housing':
        printed_category = '–ñ–∏–ª—å—ë'
    elif category == 'product':
        printed_category = '–¢–æ–≤–∞—Ä'
    elif category == 'service':
        printed_category = '–£—Å–ª—É–≥–∞'

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()

    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é
    cursor.execute("""
        SELECT UserID, Title, Description, Price, Photos, Authors_username, Date, TelNumber
        FROM AdvertTable 
        WHERE Category = ? AND Title = ?
    """, (category, title))

    advert = cursor.fetchone()

    if advert:
        user_id, title, description, price, photos, username, date, telnum = advert

        if price == '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' or price == '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è':
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            message = f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n" \
                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n" \
                      f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                      f"–¶–µ–Ω–∞: {price}\n" \
                      f"–ê–≤—Ç–æ—Ä: @{username if username != None else telnum}\n" \
                      f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date}\n"
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            message = f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n" \
                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n" \
                      f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                      f"–¶–µ–Ω–∞: {price} BYN\n" \
                      f"–ê–≤—Ç–æ—Ä: @{username if username != None else telnum}\n" \
                      f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if photos:
            folder_path = os.path.join('adv_photos_folder', f"{user_id}_{title}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
            if not os.path.exists(folder_path):
                print(f"–ü–∞–ø–∫–∞ {folder_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            else:
                files = os.listdir(folder_path)
                for file in files:
                    full_file_path = os.path.join(folder_path, file)  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É

                    if os.path.isfile(full_file_path):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
                        try:
                            with open(full_file_path, 'rb') as photo:
                                bot.send_photo(callback.message.chat.id, photo)
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ {file}: {e}")

        else:
            message += "–§–æ—Ç–æ: –ù–µ—Ç\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        kb = types.InlineKeyboardMarkup()
        button_back_to_menu = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏', callback_data='back_to_ads')
        kb.add(button_back_to_menu)
        bot.send_message(callback.message.chat.id, message, reply_markup=kb)

    else:
        bot.send_message(callback.message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    connect.close()


@bot.callback_query_handler(func=lambda callback: callback.data == 'back_to_ads')
@check_banned
def back_to_ads(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    user_info = user_state.get(callback.message.chat.id)

    if not user_info:
        bot.send_message(callback.message.chat.id, "–í–æ–∑–≤—Ä–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–Ω–æ–≤–∞.")
        return

    category = user_info.get('category')
    page = user_info.get('page', 0)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    cursor.execute("SELECT Title FROM AdvertTable WHERE Category = ?", (category,))
    titles_exec = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å—Ç–æ–ª–±—Ü–∞ Title
    titles = [title[0] for title in titles_exec]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    keyboard = keyboards.create_inline_keyboard(titles, category, page)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞:", chat_id=callback.message.chat.id,
                          message_id=callback.message.message_id, reply_markup=keyboard)

    connect.close()


#######################################################                       MY ADVERTISMENTS

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ chat.id), –∫–ª—é—á - –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ userID - page
user_state_my_ads = {}


def watch_my_ads(message):
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()

    current_user = message.chat.id  # –ø–æ–º–µ–Ω—è–ª –Ω–∞ id –≤–º–µ—Å—Ç–æ username

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ (–µ–≥–æ id –∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    user_state_my_ads[current_user] = {'userID': current_user, 'page': 0}

    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("""
           SELECT Category, Title, Description, Price, Photos 
           FROM AdvertTable 
           WHERE UserID = ?
       """, (current_user,))

    my_ads_exec = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —é–∑–µ—Ä–Ω–µ–π–º–æ–º
    my_ads = [my_ad[1] for my_ad in my_ads_exec]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞–∏–µ–ª—è –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, —Ç–æ —Ç–∞–∫ –∏ –ø–∏—à–µ–º
    if not my_ads:
        bot.send_message(message.chat.id, '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π.')
        return

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = keyboards.create_inline_keyboard_for_my_ads(my_ads, current_user, 0)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id, "–í–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:", reply_markup=keyboard)

    connect.close()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
@bot.callback_query_handler(func=lambda callback: callback.data.startswith('my_page_'))
@check_banned
def for_my_ads_pagination_handler(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —é–∑–µ—Ä id –∏–∑ callback_data
    data = callback.data.split('_')
    user_id = data[2]
    page = int(data[3])

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—é–∑–µ—Ä–Ω–µ–π–º –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    user_state_my_ads[int(user_id)] = {'userID': user_id, 'page': page}

    print('user_state –¥–ª—è my_pagination_handler:\n', user_state_my_ads)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å —é–∑–µ—Ä–Ω–µ–π–º–æ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("""
               SELECT Category, Title, Description, Price 
               FROM AdvertTable 
               WHERE UserID = ?
           """, (user_id,))

    my_ads_exec = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —é–∑–µ—Ä–Ω–µ–π–º–æ–º
    my_ads = [my_ad[1] for my_ad in my_ads_exec]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É—á–µ—Ç–æ–º —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    keyboard = keyboards.create_inline_keyboard_for_my_ads(my_ads, user_id, page)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text("–í–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:", chat_id=callback.message.chat.id,
                          message_id=callback.message.message_id, reply_markup=keyboard)

    connect.close()


@bot.callback_query_handler(func=lambda callback: callback.data.count('_') == 2)
@check_banned
def show_my_advert_detail(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º user id –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ callback_data
    splitted_callback = callback.data.split('_')
    user_id = splitted_callback[1]
    title = splitted_callback[2]

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()

    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é
    cursor.execute("""
        SELECT Category, Title, Description, Price, Photos, Date 
        FROM AdvertTable 
        WHERE UserID = ? AND Title = ?
    """, (user_id, title))

    advert = cursor.fetchone()

    if advert:
        category, title, description, price, photos, date = advert
        printed_category = 'undef'
        if category == 'housing':
            printed_category = '–ñ–∏–ª—å—ë'
        elif category == 'product':
            printed_category = '–¢–æ–≤–∞—Ä'
        elif category == 'service':
            printed_category = '–£—Å–ª—É–≥–∞'

        if price == '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' or price == '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è':
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            message = f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n" \
                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n" \
                      f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                      f"–¶–µ–Ω–∞: {price}\n" \
                      f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date}\n"
        else:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            message = f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {printed_category}\n" \
                      f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n" \
                      f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                      f"–¶–µ–Ω–∞: {price} BYN\n" \
                      f"–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {date}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if photos:
            folder_path = os.path.join('adv_photos_folder', f"{user_id}_{title}")
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
            if not os.path.exists(folder_path):
                print(f"–ü–∞–ø–∫–∞ {folder_path} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            else:
                files = os.listdir(folder_path)
                for file in files:
                    full_file_path = os.path.join(folder_path, file)  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É

                    if os.path.isfile(full_file_path):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
                        try:
                            with open(full_file_path, 'rb') as photo:
                                bot.send_photo(callback.message.chat.id, photo)
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ {file}: {e}")

        else:
            message += "–§–æ—Ç–æ: –ù–µ—Ç\n"

        bot.send_message(callback.message.chat.id, message, reply_markup=keyboards.my_advert_kb(title, category, price))

    else:
        bot.send_message(callback.message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    connect.close()


@bot.callback_query_handler(func=lambda callback: callback.data == 'back_to_my_ads')
@check_banned
def back_to_my_ads(callback):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    user_info = user_state_my_ads.get(callback.message.chat.id)
    print(user_info)

    if not user_info:
        bot.send_message(callback.message.chat.id, "–í–æ–∑–≤—Ä–∞—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å–Ω–æ–≤–∞.")
        return

    user_id = user_info.get('userID')
    page = user_info.get('page', 0)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    cursor.execute("SELECT Title FROM AdvertTable WHERE UserID = ?", (user_id,))
    my_ads_exec = cursor.fetchall()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —é–∑–µ—Ä–Ω–µ–π–º–æ–º
    my_ads = [my_ad[0] for my_ad in my_ads_exec]

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    keyboard = keyboards.create_inline_keyboard_for_my_ads(my_ads, user_id, page)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.edit_message_text("–í–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:", chat_id=callback.message.chat.id,
                          message_id=callback.message.message_id, reply_markup=keyboard)

    connect.close()


@bot.callback_query_handler(func=lambda callback: callback.data.startswith('delete_'))
@check_banned
def delete_my_ad(callback):
    connect = sqlite3.connect('AdvertDataBase.db')
    cursor = connect.cursor()
    received_callback = callback.data.split('_')

    user_id = 0

    title = received_callback[1]
    category = received_callback[2]
    price = received_callback[3]

    # –ü–û–õ–£–ß–ê–ï–ú USERid –ê–í–¢–û–†–ê –û–ë–™–Ø–í–õ–ï–ù–ò–Ø –ü–ï–†–ï–î –£–î–ê–õ–ï–ù–ò–ï–ú

    cursor.execute("SELECT UserID FROM AdvertTable WHERE Title = ? AND Category = ? AND Price = ?",
                   (title, category, price))

    user_id_tuple = cursor.fetchone()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂, –Ω–∞–ø—Ä–∏–º–µ—Ä (12345,)
    if user_id_tuple:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø—É—Å—Ç–æ–π
        user_id = user_id_tuple[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    else:
        print("UserID –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ–±—ä—è–≤–ª–µ–Ω–∏—é
    cursor.execute("""
            DELETE FROM AdvertTable 
            WHERE Category = ? AND Title = ? AND Price = ?
        """, (category, title, price))

    connect.commit()

    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
    folder_path = os.path.join('adv_photos_folder', f"{user_id}_{title}")

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–∫–∏ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if os.path.exists(folder_path):
        shutil.rmtree(folder_path)
        bot.send_message(callback.message.chat.id, '–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.')
    else:
        bot.send_message(callback.message.chat.id, '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')

    connect.close()


while True:
    try:
        bot.polling(none_stop=True)
        print('bot started')
    except Exception as e:
        print(f"Error: {e}")
        time.sleep(5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
